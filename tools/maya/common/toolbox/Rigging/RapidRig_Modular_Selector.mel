//CopyRight Dustin Nelson 2010-2014. Please do not distribute
//http://www.creativecrash.com/maya/script/-rapid-rig-modular-procedural-auto-rig-for-maya
//Script for Modular Character Rigging.
//VERSION 1.5.2
//NOVEMBER 27, 2014
//FILE IS NOT INTENDED TO BE HARMFUL, HOWEVER USE AT YOUR OWN RISK
/*/////////////////////////////////////////////////////////////////////////////
// 
//	INSTRUCTIONS:
//	1. INSTALLATION
//	TYPE IN THE FOLLOWING COMMAND IN MAYA TO GET YOUR SCRIPT DIRECTORY:
//
//	internalVar -userScriptDir;
//
//	2. PUT THE RapidRig_Modular_Selector.mel file in that directoy.
//
//	3. START UP MAYA, ENTER THE FOLLOWING COMMAND INTO
//	THE COMMAND LINE OR THE SCRIPT EDITOR:
//
//	RapidRig_Modular_Selector;
//
//	4. TO HAVE EASY ACCESS TO SCRIPT, CREATE A SHELF BUTTON
//	WITH ONLY THAT COMMAND. EVERY TIME YOU HIT THE BUTTON,
//	THE RAPID RIG INTERFACE WILL POP UP. HAPPY ANIMATING!
//
////////////////////////////////////////////////////////////////////////*/

////////////////////////////////////////////////////////////////////////
//ARM PROCEDURES////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

global proc modSelectControl(string $button)
{
	string $modControl = `button -q -ann $button`;
	if (`objExists $modControl`)
	{
		int $mods = `getModifiers`;
		if ($mods ==0)
		{
			select $modControl;
		}
		else if ($mods ==1)			
		{
			select -tgl $modControl;
		}
		else if ($mods ==4)	
		{
			select -d $modControl;
		}
		else if ($mods ==5)	
		{
			select -add $modControl;
		}
	}
	else
	{
		warning ($modControl + " does not exist");
	}
}

global proc modSelectControlFK(string $button, int $dropDownInt)
{
	string $modControl = `button -q -ann $button`;
	string $modControl2 = `button -q -ann $button`;
	int $selectType = `optionMenu -q -sl ("FkIkChainSelectMenu" + $dropDownInt)`;
	int $mods = `getModifiers`;
	if ($selectType == 1)
	{
		$modControl = ($modControl + "Ctrl");
	}
	else if ($selectType == 2)
	{
		$modControl = ($modControl + "SplineCtrl");
	}
	else if ($selectType == 3)
	{
		$modControl = ($modControl + "Ctrl");
		$modControl2 = ($modControl2 + "SplineCtrl");
	}
	//print ("modControl is " + $modControl + "\n");
	//print ("modControl2 is " + $modControl2 + "\n");
	if (`objExists $modControl`)
	{
		if ($mods ==0)
		{
			select $modControl;
		}
		else if ($mods ==1)			
		{
			select -tgl $modControl;
		}
		else if ($mods ==4)	
		{
			select -d $modControl;
		}
		else if ($mods ==5)	
		{
			select -add $modControl;
		}
	}
	else
	{
		warning ($modControl + " does not exist");
	}
	if (`objExists $modControl2` && $selectType == 3)
	{
		if ($mods ==0)
		{
			select $modControl $modControl2;
		}
		else if ($mods ==1)			
		{
			select -tgl $modControl $modControl2;
		}
		else if ($mods ==4)	
		{
			select -d $modControl $modControl2;
		}
		else if ($mods ==5)	
		{
			select -add $modControl $modControl2;
		}
	}
	else if (!`objExists $modControl2` && $selectType == 3)
	{
		warning ($modControl2 + " does not exist");
	}
}

global proc modSelectAllModulesControl(string $button)
{
	string $modControl = `button -q -ann $button`;

	$initialSelection = `ls -sl`;
	select -hi ($modControl + "Grp");
	$allControlShapes = `ls -sl -type "nurbsCurve"`;
	select $allControlShapes;
	pickWalk -d up;
	$allControls = `ls -sl`;
	string $nonControls[];
	for ($each in $allControls)
	{
		if (`objExists ($each  + ".nonControl")`)
		{
			select $each $nonControls;
			$nonControls = `ls -sl`;
		}
	}
	select $initialSelection;
	int $mods = `getModifiers`;
	if ($mods ==0)
	{
		select $allControls;
	}
	else if ($mods ==1)			
	{
		select -tgl $allControls;
	}
	else if ($mods ==4)	
	{
		select -d $allControls;
	}
	else if ($mods ==5)	
	{
		select -add $allControls;
	}
		
	select -d $nonControls;
}

global proc modIKtoFK(string $button)
{
	$initialSelection = `ls -sl`;
	string $modControl = `button -q -ann $button`;
	
	select ($modControl + "Grp");
	$branchType = `getAttr ($modControl + "Grp.topNode")`;
	if ($branchType == "arm")
	{
		$elbowNum = `getAttr ($modControl + "Grp.elbowNum")`;
		if ($elbowNum == 1)
		{
			setAttr ($modControl + "_SwitchCtrl.switchIkFk") 0;
			$wristT = `xform -q -t  ($modControl + "_WristIKtoFKLctr")`;
			$wristR = `xform -q -ro  ($modControl + "_WristIKtoFKLctr")`;
			$wristS = `getAttr  ($modControl + "_WristIKtoFKLctr.sx")`;
			
			setAttr ($modControl + "_WristIKCtrl.tx") $wristT[0];
			setAttr ($modControl + "_WristIKCtrl.ty") $wristT[1];
			setAttr ($modControl + "_WristIKCtrl.tz") $wristT[2];
			setAttr ($modControl + "_WristIKCtrl.rx") $wristR[0];
			setAttr ($modControl + "_WristIKCtrl.ry") $wristR[1];
			setAttr ($modControl + "_WristIKCtrl.rz") $wristR[2];
			setAttr ($modControl + "_WristIKCtrl.sx") $wristS;
			
			$elbowT = `xform -q -t  ($modControl + "_ElbowIKtoFKAimLctr")`;
			setAttr ($modControl + "_ElbowIKCtrl.tx") $elbowT[0];
			setAttr ($modControl + "_ElbowIKCtrl.ty") $elbowT[1];
			setAttr ($modControl + "_ElbowIKCtrl.tz") $elbowT[2];
		}
		else
		{
			warning "FK to IK matching for two elbows is not supported (yet)";
		}
	}
	else if ($branchType == "leg")
	{
		$kneeNum = `getAttr ($modControl + "Grp.kneeNum")`;
		if ($kneeNum == 1)
		{
			$AnkleIKtoFKLctr_T = `xform -q -t ($modControl + "_AnkleIKtoFKLctr")`;
			$AnkleIKtoFKLctr_R = `xform -q -ro ($modControl + "_AnkleIKtoFKLctr")`;
			setAttr ($modControl + "_FootIKCtrl.translateX") $AnkleIKtoFKLctr_T[0];
			setAttr ($modControl + "_FootIKCtrl.translateY") $AnkleIKtoFKLctr_T[1];
			setAttr ($modControl + "_FootIKCtrl.translateZ") $AnkleIKtoFKLctr_T[2];
			setAttr ($modControl + "_FootIKCtrl.rotateX") $AnkleIKtoFKLctr_R[0];
			setAttr ($modControl + "_FootIKCtrl.rotateY") $AnkleIKtoFKLctr_R[1];
			setAttr ($modControl + "_FootIKCtrl.rotateZ") $AnkleIKtoFKLctr_R[2];
		
			$KneeIKtoFKAimLctr_T = `xform -q -t ($modControl + "_KneeIKtoFKAimLctr")`;
			setAttr ($modControl + "_KneeIKCtrl.translateX") $KneeIKtoFKAimLctr_T[0];
			setAttr ($modControl + "_KneeIKCtrl.translateY") $KneeIKtoFKAimLctr_T[1];
			setAttr ($modControl + "_KneeIKCtrl.translateZ") $KneeIKtoFKAimLctr_T[2];
		
			setAttr ($modControl + "_SwitchCtrl.switchIkFk") 0;
		
			setAttr ($modControl + "_FootIKCtrl.kneeLock") 0;
			$HipFK_S = `getAttr ($modControl + "_HipFKCtrl.sx")`;
			$Hip_S_MD = `getAttr ($modControl + "_HipScale_MD.input1X")`;
			setAttr ($modControl + "_FootIKCtrl.legScale") ($HipFK_S/$Hip_S_MD);
		}
		else
		{
			warning "IK to FK matching for two knees is not supported (yet)";
		}
	}
	select $initialSelection;
}

global proc modFKtoIK(string $button)
{
	$initialSelection = `ls -sl`;
	string $modControl = `button -q -ann $button`;
	
	$branchType = `getAttr ($modControl + "Grp.topNode")`;
	if ($branchType == "arm")
	{
		$kneeNum = `getAttr ($modControl + "Grp.elbowNum")`;
		if ($kneeNum == 1)
		{
			$ShoulderFKtoIKOrientLctr_R = `xform -q -ro ($modControl + "_ShoulderFKtoIKOrientLctr")`;
			setAttr ($modControl + "_ShoulderFKCtrl.rotateX") $ShoulderFKtoIKOrientLctr_R[0];
			setAttr ($modControl + "_ShoulderFKCtrl.rotateY") $ShoulderFKtoIKOrientLctr_R[1];
			setAttr ($modControl + "_ShoulderFKCtrl.rotateZ") $ShoulderFKtoIKOrientLctr_R[2];
			
			$ElbowIK_R = `getAttr ($modControl + "_ElbowJntIK.ry")`;
			setAttr ($modControl + "_ElbowFKCtrl.rotateY") ($ElbowIK_R * 1);
			
			$WristFKtoIKLctr_R = `xform -q -ro ($modControl + "_WristFKtoIKLctr")`;
			$WristIKCtrl_S = `getAttr ($modControl + "_WristIKCtrl.sx")`;
			setAttr ($modControl + "_WristFKCtrl.rotateX") $WristFKtoIKLctr_R[0];
			setAttr ($modControl + "_WristFKCtrl.rotateY") $WristFKtoIKLctr_R[1];
			setAttr ($modControl + "_WristFKCtrl.rotateZ") $WristFKtoIKLctr_R[2];	
			setAttr ($modControl + "_WristFKCtrl.sx") $WristIKCtrl_S;
	
			setAttr ($modControl + "_SwitchCtrl.switchIkFk") 1;
	
			$ShoulderIKScale = `getAttr ($modControl + "_ShoulderJntIK.sx")`;
			setAttr ($modControl + "_ShoulderFKCtrl.sx") $ShoulderIKScale;
		}
		else
		{
			warning "FKtoIK matching for two elbows is not supported (yet)";
		}
	}
	else if ($branchType == "leg")
	{
		$kneeNum = `getAttr ($modControl + "Grp.kneeNum")`;
		if ($kneeNum == 1)
		{
			$HipFKtoIKOrientLctr = `xform -q -ro ($modControl + "_HipFKtoIKOrientLctr")`;
			setAttr ($modControl + "_HipFKCtrl.rotateX") $HipFKtoIKOrientLctr[0];
			setAttr ($modControl + "_HipFKCtrl.rotateY") $HipFKtoIKOrientLctr[1];
			setAttr ($modControl + "_HipFKCtrl.rotateZ") $HipFKtoIKOrientLctr[2];
			
			$KneeIK_R = `getAttr ($modControl + "_KneeJntIK.ry")`;
			setAttr ($modControl + "_KneeFKCtrl.ry") ($KneeIK_R * 1);
			
			$AnkleFKtoIKLctr_R = `xform -q -ro ($modControl + "_AnkleFKtoIKLctr")`;
			setAttr ($modControl + "_AnkleFKCtrl.rotateX") ($AnkleFKtoIKLctr_R[0] * 1);
			setAttr ($modControl + "_AnkleFKCtrl.rotateY") ($AnkleFKtoIKLctr_R[1] * 1);
			setAttr ($modControl + "_AnkleFKCtrl.rotateZ") ($AnkleFKtoIKLctr_R[2] * 1);
	
			setAttr ($modControl + "_SwitchCtrl.switchIkFk") 1;
	
			$HipIKScale = `getAttr ($modControl + "_HipJntIK.sx")`;
			setAttr ($modControl + "_HipFKCtrl.sx") $HipIKScale;
		}
		else
		{
			warning "IK to FK matching for two knees is not supported (yet)";
		}
	}
	select $initialSelection;
}

////////////////////////////////////////////////////////////////////////////
//BOTTOM BUTTONS////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////


global proc modSelectAll(string $modRigName)
{
	select ($modRigName + "_*Ctrl");
}


global proc modResetTransforms()
{
	string $modControls[] = `ls -sl`;
	
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modCoreName")`||`objExists ($each + ".isCOG_Ctrl")`)
		{
			$channels = `listAttr -k -u $each`;
			string $eachChannel;
			for ($eachChannel in $channels)
			{
				if ($eachChannel=="translateX"||$eachChannel=="translateY" || $eachChannel=="translateZ" || 
				$eachChannel=="rotateX" || $eachChannel=="rotateY" || $eachChannel=="rotateZ" || 
				$eachChannel=="scaleX" || $eachChannel=="scaleY" || $eachChannel=="scaleZ")
				{
					float $defaultVal[] = `attributeQuery -node $each -ld $eachChannel`;
					setAttr ($each + "." + $eachChannel) $defaultVal[0];
				}
			}
		}
	}
}

global proc modResetExtras()
{
	string $modControls[] = `ls -sl`;
	for ($each in $modControls)
	{
		if (`objExists ($each + ".modCoreName")`)
		{
			$channels = `listAttr -k -u $each`;
			string $eachChannel;
			for ($eachChannel in $channels)
			{
				if ($eachChannel!="translateX"&&$eachChannel!="translateY" && $eachChannel!="translateZ" && 
				$eachChannel!="rotateX" && $eachChannel!="rotateY" && $eachChannel!="rotateZ" && 
				$eachChannel!="scaleX" && $eachChannel!="scaleY" && $eachChannel!="scaleZ")
				{
					float $defaultVal[] = `attributeQuery -node $each -ld $eachChannel`;
					setAttr ($each + "." + $eachChannel) $defaultVal[0];
				}
			}
		}
	}
}

global proc modSideToSidePose(string $modRigName, string $modSide)
{
	$initialSelection = `ls -sl`;
	select ($modRigName + "_*Ctrl");
	select -d ($modRigName + "_MAINCtrl");
	$modControls = `ls -sl`;

	//FIND WHICH WAY TO MIRROR
	string $oppChannel;
	string $oppPrfx;
	if ($modSide == "leftToRight")
	{
		$oppChannel = "rightControl";
		$oppPrfx = "_r";
	}
	else if ($modSide == "rightToLeft")
	{
		$oppChannel = "leftControl";
		$oppPrfx = "_l";
	}
	string $each;
	for ($each in $initialSelection)
	{
		if (`objExists ($each + ".modCoreName")` && `objExists ($each + "." + $oppChannel)`)
		{
			$channels  = `listAttr -k -u $each`;
			$channelNum = `size $channels`;
			for ($eachChannel in $channels)
			{
				float $channelVal = `getAttr ($each + "." + $eachChannel)`;
				$oppControl = `getAttr ($each + "." + $oppChannel)`;
				$oppControl = ($modRigName + $oppControl);
				
				$moduleType = `getAttr ($each + ".moduleType")`;

				//SPLINE
				if ($moduleType == "spline")
				{
					if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
					{
						setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
					}
					else
					{
						setAttr ($oppControl + "." + $eachChannel) $channelVal;
					}
				}				
				
				
				//ARM
				if ($moduleType == "arm")
				{
					if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
					{
						setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
					}
					else
					{
						setAttr ($oppControl + "." + $eachChannel) $channelVal;
					}
				}
				//LEG
				if ($moduleType == "leg")
				{
					if (`gmatch $each ($modRigName + "_?_*_HipFKCtrl")` || `gmatch $each ($modRigName + "_?_*_KneeFKCtrl")` ||
						`gmatch $each ($modRigName + "_?_*_KneeFKCtrl")` || `gmatch $each ($modRigName + "_?_*_LowerLegFKCtrl")` ||
						`gmatch $each ($modRigName + "_?_*_AnkleFKCtrl")` || `gmatch $each ($modRigName + "_?_*_BallFKCtrl")` ||
						`gmatch $each ($modRigName + "_?_*_ToeFKCtrl")`)
					{
						if ($eachChannel == "translateY" || $eachChannel == "rotateX" || $eachChannel == "rotateZ" ||
						$eachChannel == "footTilt" || $eachChannel == "ballSwivel")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
					else
					{
						if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ" ||
						$eachChannel == "footTilt" || $eachChannel == "ballSwivel")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
				}
				//FK CHAIN
				if ($moduleType == "fkChain")
				{
					////GET CORE NAME
					//$modCoreName = `getAttr ($each + ".modCoreName")`;
					//GET DIRECTION
					$direction = `getAttr ($each + ".direction")`;
					if ($direction == 2 || $direction == 5)
					{
						if ($eachChannel == "translateX" || $eachChannel == "translateY" || $eachChannel == "translateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
					else
					{
						if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ")
						{
							setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
						}
						else
						{
							setAttr ($oppControl + "." + $eachChannel) $channelVal;
						}
					}
				}
				//AUXILIARY
				if ($moduleType == "auxiliary")
				{
					if ($eachChannel == "translateX" || $eachChannel == "translateZ" || $eachChannel == "rotateY")
					{
						setAttr ($oppControl + "." + $eachChannel) ($channelVal * -1);
					}
					else
					{
						setAttr ($oppControl + "." + $eachChannel) $channelVal;
					}
				}
			}
		}
	}
	select $initialSelection;
}

global proc modMirrorPose(string $modRigName)
{
	$initialSelection = `ls -sl`;
	select ($modRigName + "_*Ctrl");
	select -d ($modRigName + "_MAINCtrl");
	$modControls = `ls -sl`;
	
	//RANDOM VALUE TO CHECK MIRRORING
	float $randVal = (rand (10,15));
	
	//DEFINE CONTROLS
	string $centerControls[];
	string $leftControls[];
	string $rightControls[];
	
	string $rightChannels[];
	string $leftChannels[];
	for ($each in $initialSelection)
	{
		if (`objExists ($each + ".modRigName")`)
		{
			if (`objExists ($each + ".rightControl")`)
			{
				select $leftControls $each;
				$leftControls = `ls -sl`;
			}
			else if (`objExists ($each + ".leftControl")`)
			{
				select $rightControls $each;
				$rightControls = `ls -sl`;
			}
			else
			{
				select $centerControls $each;
				$centerControls = `ls -sl`;
			}
		}
	}
	//CENTER CONTROLS
	for ($eachCenterControl in $centerControls)
	{
		$channels = `listAttr -k -u $eachCenterControl`;
		for ($eachChannel in $channels)
		{
			$channelVal = `getAttr ($eachCenterControl + "." + $eachChannel)`;
			
			if ($eachChannel == "translateX" || $eachChannel == "rotateY" || $eachChannel == "rotateZ" ||
			$eachChannel == "footTilt" || $eachChannel == "ballSwivel")
			{
				setAttr ($eachCenterControl + "." + $eachChannel) ($channelVal * -1);
			}
		}		
	}
	
	//MIRROR LEFT TO RIGHT
	for ($eachLeftControl in $leftControls)
	{
		$eachRightControl = `getAttr ($eachLeftControl + ".rightControl")`;
		$eachRightControl = ($modRigName + $eachRightControl);
		if (`objExists $eachRightControl`)
		{
			//ADD TEMP ATTRIBUTE TO AVOID DOUBLE MIRRORING
			setAttr ($eachRightControl + ".isMirrored") $randVal;
			
			$leftChannels  = `listAttr -k -u $eachLeftControl`;
			$rightChannels = `listAttr -k -u $eachRightControl`;
			$channelNum = `size $leftChannels`;
			for ($eachSideChannel in $leftChannels)
			{
				float $leftVal = `getAttr ($eachLeftControl + "." + $eachSideChannel)`;
				float $rightVal = `getAttr ($eachRightControl + "." + $eachSideChannel)`;
				
				$moduleType = `getAttr ($eachLeftControl + ".moduleType")`;

				//SPLINE
				if ($moduleType == "spline")
				{
					if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
					}
					else
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
					}
				}				
				
				
				//ARM
				if ($moduleType == "arm")
				{
					if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
					}
					else
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
					}
				}
				//LEG
				if ($moduleType == "leg")
				{
					if (`gmatch $eachLeftControl ($modRigName + "_?_*_HipFKCtrl")` || `gmatch $eachLeftControl ($modRigName + "_?_*_KneeFKCtrl")` ||
						`gmatch $eachLeftControl ($modRigName + "_?_*_KneeFKCtrl")` || `gmatch $eachLeftControl ($modRigName + "_?_*_LowerLegFKCtrl")` ||
						`gmatch $eachLeftControl ($modRigName + "_?_*_AnkleFKCtrl")` || `gmatch $eachLeftControl ($modRigName + "_?_*_BallFKCtrl")` ||
						`gmatch $eachLeftControl ($modRigName + "_?_*_ToeFKCtrl")`)
					{
						if ($eachSideChannel == "translateY" || $eachSideChannel == "rotateX" || $eachSideChannel == "rotateZ" ||
						$eachSideChannel == "footTilt" || $eachSideChannel == "ballSwivel")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
					else
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ" ||
						$eachSideChannel == "footTilt" || $eachSideChannel == "ballSwivel")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
				}
				//FK CHAIN
				if ($moduleType == "fkChain")
				{
					////GET CORE NAME
					//$modCoreName = `getAttr ($eachLeftControl + ".modCoreName")`;
					//GET DIRECTION
					$direction = `getAttr ($eachLeftControl + ".direction")`;
					if ($direction == 2 || $direction == 5)
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
					else
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
						}
						else
						{
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
						}
					}
				}
				//AUXILIARY
				if ($moduleType == "auxiliary")
				{
					if ($eachSideChannel == "translateX" || $eachSideChannel == "translateZ" || $eachSideChannel == "rotateY")
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
					}
					else
					{
						setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
					}
				}
			}
		}
	}
	
	//MIRROR RIGHT TO LEFT
	for ($eachRightControl in $rightControls)
	{
		//CHECK IF THE RIGHT CONTROL HAS ALREADY BEEN MIRRORED, AND SKIP IF TRUE
		$isMirrored = `getAttr ($eachRightControl + ".isMirrored")`;
		
		if ($isMirrored != $randVal)
		{
			$eachLeftControl = `getAttr ($eachRightControl + ".leftControl")`;
			$eachLeftControl = ($modRigName + $eachLeftControl);
			if (`objExists $eachLeftControl`)
			{
				$rightChannels  = `listAttr -k -u $eachRightControl`;
				$leftChannels = `listAttr -k -u $eachLeftControl`;
				$channelNum = `size $rightChannels`;
				for ($eachSideChannel in $rightChannels)
				{
					float $rightVal = `getAttr ($eachRightControl + "." + $eachSideChannel)`;
					float $leftVal = `getAttr ($eachLeftControl + "." + $eachSideChannel)`;
					
					$moduleType = `getAttr ($eachRightControl + ".moduleType")`;
	
					//SPLINE
					if ($moduleType == "spline")
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						}
						else
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						}
					}				
					
					
					//ARM
					if ($moduleType == "arm")
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						}
						else
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						}
					}
					//LEG
					if ($moduleType == "leg")
					{
						if (`gmatch $eachRightControl ($modRigName + "_?_*_HipFKCtrl")` || `gmatch $eachRightControl ($modRigName + "_?_*_KneeFKCtrl")` ||
							`gmatch $eachRightControl ($modRigName + "_?_*_KneeFKCtrl")` || `gmatch $eachRightControl ($modRigName + "_?_*_LowerLegFKCtrl")` ||
							`gmatch $eachRightControl ($modRigName + "_?_*_AnkleFKCtrl")` || `gmatch $eachRightControl ($modRigName + "_?_*_BallFKCtrl")` ||
							`gmatch $eachRightControl ($modRigName + "_?_*_ToeFKCtrl")`)
						{
							if ($eachSideChannel == "translateY" || $eachSideChannel == "rotateX" || $eachSideChannel == "rotateZ" ||
							$eachSideChannel == "righttTilt" || $eachSideChannel == "ballSwivel")
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							}
							else
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							}
						}
						else
						{
							if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ" ||
							$eachSideChannel == "righttTilt" || $eachSideChannel == "ballSwivel")
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							}
							else
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							}
						}
					}
					//FK CHAIN
					if ($moduleType == "fkChain")
					{
						////GET CORE NAME
						//$modCoreName = `getAttr ($eachRightControl + ".modCoreName")`;
						//GET DIRECTION
						$direction = `getAttr ($eachRightControl + ".direction")`;
						if ($direction == 2 || $direction == 5)
						{
							if ($eachSideChannel == "translateX" || $eachSideChannel == "translateY" || $eachSideChannel == "translateZ")
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							}
							else
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							}
						}
						else
						{
							if ($eachSideChannel == "translateX" || $eachSideChannel == "rotateY" || $eachSideChannel == "rotateZ")
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
								setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
							}
							else
							{
								setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
								setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
							}
						}
					}
					//AUXILIARY
					if ($moduleType == "auxiliary")
					{
						if ($eachSideChannel == "translateX" || $eachSideChannel == "translateZ" || $eachSideChannel == "rotateY")
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) ($rightVal * -1);
							setAttr ($eachRightControl + "." + $eachSideChannel) ($leftVal * -1);
						}
						else
						{
							setAttr ($eachLeftControl + "." + $eachSideChannel) $rightVal;
							setAttr ($eachRightControl + "." + $eachSideChannel) $leftVal;
						}
					}
				}
			}
		}
		else
		{//RESET MIRRORED ATTRIBUTE
			setAttr ($eachRightControl + ".isMirrored") 1015;
		}
	}
	select $initialSelection;
}



global proc CreateModuPoserGUI()
{
	//GET NUMBER OF MODULES
	$mainCtrl = `ls -sl`;
	$selectionSize = `size $mainCtrl`;
	if ($selectionSize == 1)
	{
		if (`objExists ($mainCtrl[0] + ".isMain")`)
		{
			//GET RIG NAME
			string $modRigConnections[] = `listConnections ($mainCtrl[0] + ".modRigConnection")`;
			string $modRigName = $modRigConnections[0];
			//print ("modRigName is " + $modRigName + "\n");
			//string $modRigName = `getAttr ($mainCtrl[0] + ".modRigName")`;
			select -hi $mainCtrl[0];
			$hierarchy = `ls -sl -type "transform"`;
			select -cl;
			$topNodes = `ls -sl`;
			string $each;
			int $topNodesSize = 0;
			

			for ($each in $hierarchy)
			{
			    if (`objExists ($each + ".topNode")`)
			    {
			    select $each $topNodes;
			    $topNodes = `ls -sl`;
			    $topNodesSize = `size $topNodes`;
			    }
			}
			
			tabLayout -cr true -ann $modRigName modPoserTabs /*-w 660 -h 800*/;
			
			string $modForm = `formLayout -numberOfDivisions 100 /*-w 660 -h 800*/`;
			
			setParent $modForm;
			string $modSelectAllButton				= `button -label "Select All" -ann "Select all controls" -c ("modSelectAll " + $modRigName)`;
			string $modSelectMAINButton				= `button -label "Select MAINCtrl" -ann ($modRigName + "_MAINCtrl")`;
			string $modSelectCOGButton				= `button -label "Select COG_Ctrl" -ann ($modRigName + "_COG_Ctrl")`;
			string $modSelectROOTButton				= `button -label "Select ROOTCtrl" -ann ($modRigName + "_ROOTCtrl")`;
			string $modSelectROOTSecondaryButton	= `button -label "Select ROOTSecondaryCtrl" -ann ($modRigName + "_ROOTSecondaryCtrl")`;
			string $modSelectROOTParentButton		= `button -label "Select ROOTParentCtrl" -ann ($modRigName + "_ROOTParentCtrl")`;
			string $modResetTransformsButton 		= `button -label "Reset Transforms" -c "modResetTransforms"`;
			string $modResetExtrasButton			= `button -label "Reset Extras" -c "modResetExtras"`;
			string $modMirrorButton					= `button -label "Mirror Pose" -c ("modMirrorPose " + $modRigName)`;
			string $modLeftToRightButton			= `button -label "Left Pose to Right" -bgc 0.00 0.20 0.65 -c ("modSideToSidePose " + $modRigName + " leftToRight")`;
			string $modRightToLeftButton			= `button -label "Right Pose to Left" -bgc 0.65 0.15 0.15 -c ("modSideToSidePose " + $modRigName + " rightToLeft")`;
			button -edit -command ("modSelectControl " + $modSelectMAINButton) $modSelectMAINButton;
			button -edit -command ("modSelectControl " + $modSelectROOTButton) $modSelectROOTButton;
			button -edit -command ("modSelectControl " + $modSelectROOTSecondaryButton) $modSelectROOTSecondaryButton;
			button -edit -command ("modSelectControl " + $modSelectROOTParentButton) $modSelectROOTParentButton;
			button -edit -command ("modSelectControl " + $modSelectCOGButton) $modSelectCOGButton;
			formLayout -edit
			

			-af $modSelectMAINButton left 0
			-ap $modSelectMAINButton right 0 25
			-ac $modSelectMAINButton bottom 2 $modSelectROOTButton

			-ap $modSelectAllButton left 0 25
			-ap $modSelectAllButton right 0 75
			-ac $modSelectAllButton bottom 2 $modSelectROOTButton

			-ap $modSelectCOGButton left 0 75
			-af $modSelectCOGButton right 0
			-ac $modSelectCOGButton bottom 2 $modSelectROOTButton

			-af $modSelectROOTSecondaryButton left 0 
			-ap $modSelectROOTSecondaryButton right 0 30
			-ac $modSelectROOTSecondaryButton bottom 2 $modResetTransformsButton

			-ap $modSelectROOTButton left 0 30
			-ap $modSelectROOTButton right 0 70
			-ac $modSelectROOTButton bottom 2 $modResetTransformsButton

			-ap $modSelectROOTParentButton left 0 70
			-af $modSelectROOTParentButton right 0
			-ac $modSelectROOTParentButton bottom 2 $modResetTransformsButton

			-af $modResetTransformsButton left 0
			-ap $modResetTransformsButton right 0 50
			-ac $modResetTransformsButton bottom 2 $modMirrorButton
			
			-ap $modResetExtrasButton left 0 50
			-af $modResetExtrasButton right 0 
			-ac $modResetExtrasButton bottom 2 $modMirrorButton

			-af $modLeftToRightButton left 0
			-ap $modLeftToRightButton right 0 33
			-af $modLeftToRightButton bottom 0

			-ap $modMirrorButton left 0 33
			-ap $modMirrorButton right 0 67
			-af $modMirrorButton bottom 0
			
			-ap $modRightToLeftButton left 0 67
			-af $modRightToLeftButton right 0
			-af $modRightToLeftButton bottom 0
			
			$modForm;
			
			
			int $i = 0;

			
			paneLayout -configuration "vertical3" mainModSelectionPaneLayout;
			
			formLayout -edit
			-attachForm mainModSelectionPaneLayout left 0
			-attachForm mainModSelectionPaneLayout right 0
			-attachForm mainModSelectionPaneLayout top 0
			-attachControl mainModSelectionPaneLayout bottom 2 $modSelectAllButton
			$modForm;
			
			paneLayout -configuration "horizontal2" subModSelectionPaneLayout1;
					
					//ARMS///////////////////////////////////////////////////////////////////////////////////////////
					int $i = 0;
						frameLayout -label "ARMS" RRMS_ArmsFrameLayout;
						//columnLayout RRMS_ArmsColumnLayout;
						scrollLayout RRMS_ArmsScrollLayout;
						columnLayout RRMS_ArmsColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "arm")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");

										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
								-w 184
								-collapsable 1 
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z) ("armModFrameLayout" + $i);
								columnLayout;
								
								string $armsFormLayout = `formLayout -numberOfDivisions 100`;
								$elbowNum = `getAttr ($each + ".elbowNum")`;

								//CLAVICLE
								string $clavicleButton     = `button -label "Clavicle"   -w 114 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ClavicleCtrl")`;
								button -edit -command ("modSelectControl " + $clavicleButton) $clavicleButton;

								//FK
								string $shoulderButton     = `button -label "ShldrFK"   -w 114 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ShoulderFKCtrl")`;
								string $wristFKButton = `button -label "WristFK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_WristFKCtrl")`;
								button -edit -command ("modSelectControl " + $shoulderButton) $shoulderButton;
								button -edit -command ("modSelectControl " + $wristFKButton) $wristFKButton;
								//IK
								string $elbow1IKButton = `button -label "ElbowIK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ElbowIKCtrl")`;
								string $wristIKButton =  `button -label "WristIK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_WristIKCtrl")`;
								button -edit -command ("modSelectControl " + $elbow1IKButton) $elbow1IKButton;
								button -edit -command ("modSelectControl " + $wristIKButton) $wristIKButton;
								
								//ELBOWS//	
								string $elbow1FKButton;
								string $elbow2FKButton;
								string $LowerArmIKButton;
								int $elbow2Offset = 0;
								if ($elbowNum == 1)
								{
									$elbow1FKButton = `button -label "ElbowFK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ElbowFKCtrl")`;
									button -edit -command ("modSelectControl " + $elbow1FKButton) $elbow1FKButton;
								}

								else
								{
									$elbow1FKButton = `button -label "Elbow1FK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Elbow1FKCtrl")`;
									$elbow2FKButton = `button -label "Elbow2FK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Elbow2FKCtrl")`;
									$LowerArmIKButton = `button -label "LwrArmIK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_LowerArmIKCtrl")`;
									button -edit -command ("modSelectControl " + $elbow1FKButton) $elbow1FKButton;
									button -edit -command ("modSelectControl " + $elbow2FKButton) $elbow2FKButton;
									button -edit -command ("modSelectControl " + $LowerArmIKButton) $LowerArmIKButton;
									$elbow2Offset = 18;
								}


								//SWITCH
								string $armSwitch = `button -label "SwitchCtrl" -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_SwitchCtrl")`;
								string $armIKtoFK = `button -label "IKtoFK"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "")`;
								string $armFKtoIK = `button -label "FKtoIK"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "")`;
								string $armALL    = `button -label ">ALL<"   -w 054 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName + "")`;
								button -edit -command ("modSelectControl " + $armSwitch) $armSwitch;
								button -edit -command ("modIKtoFK " + $armIKtoFK) $armIKtoFK;
								button -edit -command ("modFKtoIK " + $armFKtoIK) $armFKtoIK;
								button -edit -command ("modSelectAllModulesControl " + $armALL) $armALL;
								
								formLayout -edit
								//CLAVICLE
								-attachForm $clavicleButton "left" 2
								-attachForm $clavicleButton "top" 0
								//FK
								-attachForm $shoulderButton "left" 2
								-attachForm $shoulderButton "top" 18
								
								-attachForm $elbow1FKButton "left" 2
								-attachForm $elbow1FKButton "top" 36

								-attachForm $wristFKButton "left" 2
								-attachForm $wristFKButton "top" ($elbow2Offset + 54)
								
								//IK
								-attachForm $elbow1IKButton "left" 62
								-attachForm $elbow1IKButton "top" 36

								-attachForm $wristIKButton "left" 62
								-attachForm $wristIKButton "top" ($elbow2Offset + 54)
								
								//SWITCH
								-attachForm $armSwitch "left" 128
								-attachForm $armSwitch "top" 0

								-attachForm $armIKtoFK "left" 128
								-attachForm $armIKtoFK "top" 18

								-attachForm $armFKtoIK "left" 128
								-attachForm $armFKtoIK "top" 36
								
								-attachForm $armALL "left" 128
								-attachForm $armALL "top" 54
									
								$armsFormLayout;

								if ($elbowNum == 2)
								{
									formLayout -edit
									-attachForm $elbow2FKButton "left" 2
									-attachForm $elbow2FKButton "top" 54
	                                
									-attachForm $LowerArmIKButton "left" 62
									-attachForm $LowerArmIKButton "top" 54
									
									$armsFormLayout;
								}								
									
								setParent ("armModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_ArmsColumnLayout;
								}
							}
							//setParent RRMS_ArmsColumnLayout;
							//$i = ($i + 1);
						}
						setParent subModSelectionPaneLayout1;
						
						
					//LEGS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "LEGS";
					//columnLayout RRMS_LegsColumnLayout;
						scrollLayout RRMS_LegsScrollLayout;
						columnLayout RRMS_LegsColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "leg")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
								-w 184
								-collapsable 1 
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z) ("legModFrameLayout" + $i);
								columnLayout;
								
								string $legsFormLayout = `formLayout -numberOfDivisions 100`;
								$kneeNum = `getAttr ($each + ".kneeNum")`;
								
								//FK
								string $hipButton     = `button -label "HipFK"   -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_HipFKCtrl")`;
								string $ankleFKButton = `button -label "AnkleFK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_AnkleFKCtrl")`;
								string $ballFKButton  = `button -label "BallFK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_BallFKCtrl")`;
								button -edit -command ("modSelectControl " + $hipButton) $hipButton;
								button -edit -command ("modSelectControl " + $ankleFKButton) $ankleFKButton;
								button -edit -command ("modSelectControl " + $ballFKButton) $ballFKButton;
								//IK
								string $knee1IKButton = `button -label "KneeIK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_KneeIKCtrl")`;
								string $heelIKButton =  `button -label "HeelIK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_HeelIKCtrl")`;
								string $toeIKButton =   `button -label "ToeIK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_ToeIKCtrl")`;
								string $footIKButton =  `button -label "FootIK" -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_FootIKCtrl")`;
								button -edit -command ("modSelectControl " + $knee1IKButton) $knee1IKButton;
								button -edit -command ("modSelectControl " + $heelIKButton) $heelIKButton;
								button -edit -command ("modSelectControl " + $toeIKButton) $toeIKButton;
								button -edit -command ("modSelectControl " + $footIKButton) $footIKButton;
								
								//KNEES//	
								string $knee1FKButton;
								string $knee2FKButton;
								string $LowerLegIKButton;
								int $knee2Offset = 0;
								if ($kneeNum == 1)
								{
									$knee1FKButton = `button -label "KneeFK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_KneeFKCtrl")`;
									button -edit -command ("modSelectControl " + $knee1FKButton) $knee1FKButton;
								}

								else
								{
									$knee1FKButton = `button -label "Knee1FK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Knee1FKCtrl")`;
									$knee2FKButton = `button -label "Knee2FK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_Knee2FKCtrl")`;
									$LowerLegIKButton = `button -label "LwrLegIK"  -w 054 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_LowerLegIKCtrl")`;
									button -edit -command ("modSelectControl " + $knee1FKButton) $knee1FKButton;
									button -edit -command ("modSelectControl " + $knee2FKButton) $knee2FKButton;
									button -edit -command ("modSelectControl " + $LowerLegIKButton) $LowerLegIKButton;
									$knee2Offset = 18;
								}


								//SWITCH
								string $legSwitch = `button -label "SwitchCtrl" -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_SwitchCtrl")`;
								string $legIKtoFK = `button -label "IKtoFK"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "")`;
								string $legFKtoIK = `button -label "FKtoIK"  -w 054 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "")`;
								string $legALL    = `button -label ">ALL<"   -w 054 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName + "")`;
								button -edit -command ("modSelectControl " + $legSwitch) $legSwitch;
								button -edit -command ("modIKtoFK " + $legIKtoFK) $legIKtoFK;
								button -edit -command ("modFKtoIK " + $legFKtoIK) $legFKtoIK;
								button -edit -command ("modSelectAllModulesControl " + $legALL) $legALL;
								
								formLayout -edit
								//FK
								-attachForm $hipButton "left" 2
								-attachForm $hipButton "top" 0
								
								-attachForm $knee1FKButton "left" 2
								-attachForm $knee1FKButton "top" 18

								-attachForm $ankleFKButton "left" 2
								-attachForm $ankleFKButton "top" ($knee2Offset + 36)

								-attachForm $ballFKButton "left" 2
								-attachForm $ballFKButton "top" ($knee2Offset + 54)
								
								
								//IK
								-attachForm $knee1IKButton "left" 62
								-attachForm $knee1IKButton "top" 0

								-attachForm $heelIKButton "left" 62
								-attachForm $heelIKButton "top" ($knee2Offset + 18)

								-attachForm $toeIKButton "left" 62
								-attachForm $toeIKButton "top" ($knee2Offset + 36)
								
								-attachForm $footIKButton "left" 62
								-attachForm $footIKButton "top" ($knee2Offset + 54)
								
								//SWITCH
								-attachForm $legSwitch "left" 128
								-attachForm $legSwitch "top" 0

								-attachForm $legIKtoFK "left" 128
								-attachForm $legIKtoFK "top" 18

								-attachForm $legFKtoIK "left" 128
								-attachForm $legFKtoIK "top" 36
								
								-attachForm $legALL "left" 128
								-attachForm $legALL "top" 54
									
								$legsFormLayout;

								if ($kneeNum == 2)
								{
									formLayout -edit
									-attachForm $knee2FKButton "left" 2
									-attachForm $knee2FKButton "top" 36
	                                
									-attachForm $LowerLegIKButton "left" 62
									-attachForm $LowerLegIKButton "top" 18
									
									$legsFormLayout;
								}								
									
								setParent ("legModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_LegsColumnLayout;
								}
							}
							//setParent RRMS_LegsColumnLayout;
							//$i = ($i + 1);
						}

			setParent mainModSelectionPaneLayout;
				paneLayout -configuration "horizontal3" subModSelectionPaneLayout2;
						
				
					//LOOK ATS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "LOOK-ATS";
					//columnLayout RRMS_LookAtsColumnLayout;
						scrollLayout RRMS_LookAtsScrollLayout;
						columnLayout RRMS_LookAtsColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "lookAt")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								int $lookAts = `getAttr ($each + ".lookAts")`;
								string $side = "";
								
								int $frameWidth =  (($lookAts + 2) * 32 - 4);
								if ($frameWidth < 184)
								{
									$frameWidth = 184;
								}

								string $lookAtButton;
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
								}
								//CREATE PAIRING FRAME LAYOUT
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									frameLayout -label ($moduleName + " (pair)")
									-w 200
									-bgc 0.17 0.17 0.17
									-collapsable 1 ($moduleName + "PairFrameLayout");
									columnLayout ($moduleName + "PairColumnLayout");
									//ADD TOP LOOK-AT BUTTON
									string $lookAtButton = `button -label ($moduleName + " Look-At") -h 18 -ann ($modRigName + "_" + $moduleName + "_LookAtCtrl")`;
									button -edit -command ("modSelectControl " + $lookAtButton) $lookAtButton;
								}
								
								frameLayout -label $coreName
								-w $frameWidth
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ("lookAtModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;
								
								if (!`objExists ($each + ".side")`)
								{
									string $lookAtButton = `button -label ($moduleName + " Look-At") -h 18 -ann ($modRigName + "_" + $moduleName + "_LookAtCtrl")`;
									button -edit -command ("modSelectControl " + $lookAtButton) $lookAtButton;
								}

								//LOOK-AT CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;
								$jointNum = 1;
								$hOffset = 0;
								$vOffset = 0;
                        
								//ADD "ALL" BUTTONS IF THERE ARE MULTIPLE CHAINS
								if ($lookAts > 1)
								{
									$allButton = `button -label ">ALL<" -w 42 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName + "")`;
									button -edit -command ("modSelectAllModulesControl " + $allButton) $allButton;
									
									formLayout -edit
									-attachForm $allButton "left" 0
									-attachForm $allButton "top" 0
									$selectForm;
									$hOffset = ($hOffset + 44);
								}
								
								string $stringNum = "0";
								$mainButton = `button -label "Mstr" -w 34 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_MasterCtrl")`;
								button -edit -command ("modSelectControl " + $mainButton) $mainButton;
								formLayout -edit
								-attachForm $mainButton "left" $hOffset
								-attachForm $mainButton "top" $vOffset											
								$selectForm;
								
								$hOffset = ($hOffset + 36);

								$jointNum = 1;
								while ($jointNum <= $lookAts)
								{
									if ($jointNum >= 10)
									{
										$stringNum = "";
									}
									$chain_numButton = `button -label ($jointNum) -w 28 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $jointNum + "Ctrl")`;
									button -edit -command ("modSelectControl " + $chain_numButton) $chain_numButton;
									
									formLayout -edit
									-attachForm $chain_numButton "left" $hOffset
									-attachForm $chain_numButton "top" $vOffset											
									$selectForm;
									
									$hOffset = ($hOffset + 28);
									$jointNum++;
								}
								$vOffset = ($vOffset + 30);
								$jointNum = 1;
								$hOffset = 0;

								setParent ("lookAtModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;

								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_LookAtsColumnLayout;
								}
							}
							//setParent RRMS_LookAtsColumnLayout;
							//$i = ($i + 1);
						}
						

						setParent subModSelectionPaneLayout2;

					//HEAD///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "HEADS";
					//columnLayout RRMS_HeadColumnLayout;
						scrollLayout RRMS_HeadScrollLayout;
						columnLayout RRMS_HeadColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "head")
							{
								//GET CORE NAME
								$coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC2 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
										
								}
								frameLayout -label $coreName
									-w 184
									-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
									-collapsable 1 ("headModFrameLayout" + $i);
									columnLayout;
									if (!objExists ($each + ".jaw"))
									{
										string $headButton = `button -label "Head" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_MasterCtrl")`;
										button -edit -command ("modSelectControl " + $headButton) $headButton;
									}
									else
									{
										rowColumnLayout -numberOfColumns 2;
										string $headButton = `button -label "Head" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_MasterCtrl")`;
										button -edit -command ("modSelectControl " + $headButton) $headButton;
										string $jawButton = `button -label "Jaw" -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_JawCtrl")`;
										button -edit -command ("modSelectControl " + $jawButton) $jawButton;
									}
								setParent ("headModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_HeadColumnLayout;
								}
							}
							//setParent RRMS_HeadColumnLayout;
							//$i = ($i + 1);
						}
				setParent subModSelectionPaneLayout2;

					
					//SPLINE///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "RIBBON SPLINES";
					//columnLayout RRMS_SplineColumnLayout;
						scrollLayout RRMS_SplineScrollLayout;
						columnLayout RRMS_SplineColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "spline")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										//CREATE PAIRING FRAME LAYOUT
										frameLayout -label ($moduleName + " (pair)")
										-bgc 0.17 0.17 0.17
										-w 184
										-collapsable 1 ($moduleName + "PairFrameLayout");
										columnLayout ($moduleName + "PairColumnLayout");
										//
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}

								}
							
								frameLayout -label $coreName
								-w 184
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ("splineModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;


								//SPLINE CONTROLS
								int $splineNum = `getAttr ($each + ".splineJoints")`;
								$splineNum = ($splineNum - 1);
								int $currentSplineNum = 1;
								string $spineSelectFormLayout = `formLayout -numberOfDivisions 100`;
								$hOffset = 1;
								$vOffset = 0;
                        
								string $stringNum = "0";
								while ($splineNum > 0)
								{
									if ($splineNum >= 10)
									{
										$stringNum = "";
									}
									$splineFK     = `button -label ($splineNum + " FK")  -w 36 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $splineNum + "FKCtrl")`;
									$splineCurveCtrl = `button -label ($splineNum + " Crv") -w 38 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_" + $stringNum + $splineNum + "CurveCtrl")`;
									button -edit -command ("modSelectControl " + $splineFK) $splineFK;
									button -edit -command ("modSelectControl " + $splineCurveCtrl) $splineCurveCtrl;
									
									formLayout -edit
									-attachForm $splineFK "left" $hOffset
									-attachForm $splineFK "top" $vOffset
									
									-attachForm $splineCurveCtrl "left" ($hOffset + 40)
									-attachForm $splineCurveCtrl "top" $vOffset											
									$spineSelectFormLayout;
									
									$vOffset = ($vOffset + 18);
									$splineNum--;
								}
								
								//SWITCH
								string $topIKCButton = `button -label "TopIKCtrl" -w 86 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_TopIKCtrl")`;
								string $midIKCButton = `button -label "MidIKCtrl" -w 86 -h 18 -bgc ($buttonC3.x) ($buttonC3.y) ($buttonC3.z) -ann ($modRigName + $coreName + "_MidIKCtrl")`;
								string $allFKButton = `button -label "All FK"  -w 40 -h 18 -bgc .95 .95 .95  -ann ($modRigName + $coreName + "_*FKCtrl")`;
								string $allCurveButton    = `button -label "All Crv" -w 42 -h 18 -bgc .95 .95 .95  -ann ($modRigName + $coreName + "")`;
								button -edit -command ("modSelectControl " + $topIKCButton) $topIKCButton;
								button -edit -command ("modSelectControl " + $midIKCButton) $midIKCButton;
								button -edit -command ("modSelectControl " + $allFKButton) $allFKButton;
								button -edit -command ("modSelectAllModulesControl " + $allCurveButton) $allCurveButton;
								
								formLayout -edit
								-attachForm $topIKCButton "left" 92
								-attachForm $topIKCButton "top" 0

								-attachForm $midIKCButton "left" 92
								-attachForm $midIKCButton "top" 18

								-attachForm $allFKButton "left" 92
								-attachForm $allFKButton "top" 36
								
								-attachForm $allCurveButton "left" 136
								-attachForm $allCurveButton "top" 36
									
								$spineSelectFormLayout;								
								setParent ("splineModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_SplineColumnLayout;
								}
							}
							//setParent RRMS_SplineColumnLayout;
							//$i++;
						}
						
				setParent subModSelectionPaneLayout2;

						
			setParent mainModSelectionPaneLayout;
				paneLayout -configuration "horizontal2" subModSelectionPaneLayout3;
					
						
					//FK CHAINS///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "FK CHAINS";
						scrollLayout RRMS_FkChainScrollLayout;
						columnLayout RRMS_FkChainColumnLayout;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "fkChain")
							{
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								int $fkChains = `getAttr ($each + ".fkChains")`;
								int $jointsPerChain = `getAttr ($each + ".jointsPerChain")`;
								$frameWidth =  (($jointsPerChain + 1) * 32 - 4);
								if ($frameWidth < 184)
								{
									$frameWidth = 184;
								}
								
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									if ($side == "right")
									{
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}

								}
								//CREATE PAIRING FRAME LAYOUT
								//print ($each + "\n");
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									frameLayout -label ($moduleName + " (pair)")
									-w $frameWidth
									-bgc 0.17 0.17 0.17
									-collapsable 1 ($moduleName + "PairFrameLayout");
									columnLayout ($moduleName + "PairColumnLayout");
								}
								
								frameLayout -label $coreName
								-w $frameWidth
								-bgc ($buttonC1.x) ($buttonC1.y) ($buttonC1.z)
								-collapsable 1 ("fkChainModFrameLayout" + $i);
								columnLayout;
								int $currentSplineNum = 1;
								
								//FK CHAIN CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;
								$jointNum = 1;
								$chainNum = 1;
								$hOffset = 0;
								$vOffset = 0;
								$vDropDownOffset = 0;
								string $jointString = "0";
								string $chainString = "0";
								$optionMenuVis = 1;
								
								//CREATE DROPDOWN
								if ($jointsPerChain == 1)
								{
									//HIDE DROP DOWN IF THERE IS ONLY ONE FK CONTROL
									$optionMenuVis = 0;
								}
								optionMenu -w 100 -vis $optionMenuVis ("FkIkChainSelectMenu" + $i);
									menuItem -label "Select FK";
									menuItem -label "Select IK";
									menuItem -label "Select FK & IK";
									$vDropDownOffset = 22;

								if ($jointsPerChain > 1 && $fkChains > 1)
								{
									//MASTER BUTTON
									$fkMasterButton = `button -label ">ALL<" -w 32 -h 18 -bgc .95 .95 .95 -ann ($modRigName + $coreName + "_??_??")`;
									//button -edit -command ("modSelectControlFK " + $fkMasterButton + "," + $i) $fkMasterButton;
									button -edit -command ("modSelectControlFK(\"" + $fkMasterButton + "\",\"" + $i + "\")") $fkMasterButton;
									
									formLayout -edit
									-attachForm $fkMasterButton "left" 0
									-attachForm $fkMasterButton "top" $vDropDownOffset
									$selectForm;
									$hOffset = 34;
									$vOffset = $vDropDownOffset + 18;
								}
								$vOffset3 = 0;
								if ($fkChains == 1)
								{	
									$vOffset3 = $vDropDownOffset;
								}
								$hOffset2 = $hOffset;
								$vOffset2 = $vOffset;
								if ($jointsPerChain > 1)
								{
									while ($chainNum <= $fkChains)
									{
										//FK DOWN BUTTON
										$chain_FKDownButton = `button -label ">" -w 32 -h 18 -bgc .95 .95 .95
										-ann ($modRigName + $coreName + "_" + $chainString + $chainNum + "_??")`;
										//button -edit -command ("modSelectControlFK " + $chain_FKDownButton + "," + $i) $chain_FKDownButton;
										button -edit -command ("modSelectControlFK(\"" + $chain_FKDownButton + "\",\"" + $i + "\")") $chain_FKDownButton;
										
										formLayout -edit
										-attachForm $chain_FKDownButton "left" 0
										-attachForm $chain_FKDownButton "top" ($vOffset2 + $vOffset3)
										$selectForm;
										$vOffset2 = $vOffset2 + 20;
										$chainNum++;
									}
									$hOffset = 34;
								}
								$jointNum = 1;
								$chainNum = 1;
								
								if ($fkChains > 1)
								{
									while ($jointNum <= $jointsPerChain)
									{
										//FK ACROSS BUTTON
										$chain_FkAcrossButton = `button -label "v" -w 32 -h 18 -bgc .95 .95 .95
										-ann ($modRigName + $coreName + "_??_" + $jointString + $jointNum + "")`;
										//button -edit -command ("modSelectControlFK " + $chain_FkAcrossButton + "," + $i) $chain_FkAcrossButton;
										button -edit -command ("modSelectControlFK(\"" + $chain_FkAcrossButton + "\",\"" + $i + "\")") $chain_FkAcrossButton;
										
										formLayout -edit
										-attachForm $chain_FkAcrossButton "left" $hOffset2
										-attachForm $chain_FkAcrossButton "top" $vDropDownOffset
										$selectForm;
										$hOffset2 = $hOffset2 + 32;
										$jointNum++;
									}
								$vOffset = 18;
								}
								//RESET "v" ">" OFFSETS
								$jointNum = 1;
								$chainNum = 1;
									
								$vOffsetReset = $vOffset + 22;
								if ($jointsPerChain == 1)
								{
									$vOffsetReset = $vOffset;
								}
								while ($jointNum <= $jointsPerChain)
								{//JOINTS
									if ($jointNum >=10)
									{
										$jointString = "";
									}
									$vOffset = $vOffsetReset;
									$chainNum = 1;
									while ($chainNum <= $fkChains)
									{//CHAINS
										if ($chainNum >=10)
										{
											$chainString = "";
										}
										$chain_numButton = `button -label ($chainNum + "_" + $jointNum) -w 32 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z)
										-ann ($modRigName + $coreName + "_" + $chainString + $chainNum + "_" + $jointString + $jointNum + "")`;
										//button -edit -command ("modSelectControlFK " + $chain_numButton + "," + $i) $chain_numButton;
										button -edit -command ("modSelectControlFK(\"" + $chain_numButton + "\",\"" + $i + "\")") $chain_numButton;
										//button -edit -command "RRP_selectIKFK(\"_rWristFKC\",\"_rWristIKC\",\"_rArmSwitchC\") $chain_numButton;
										
										formLayout -edit
										-attachForm $chain_numButton "left" $hOffset
										-attachForm $chain_numButton "top" $vOffset											
										$selectForm;
										$vOffset = ($vOffset + 20);
										$chainNum++;
									}//CHAINS END
									$hOffset = ($hOffset + 32);
									$jointNum++;
								}//JOINTS END
							
								$jointNum = 1;								
								setParent ("fkChainModFrameLayout" + $i);
								if ($side == "left")
								{
									setParent..;
								}
								setParent..;
								
								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_FkChainColumnLayout;
								}
							}
						}
						
						setParent subModSelectionPaneLayout3;
						
					//AUXILIARIES///////////////////////////////////////////////////////////////////////////////////////////
					$i = 0;
					frameLayout -label "AUXILIARIES";
						scrollLayout RRMS_AuxiliariesScrollLayout;
						columnLayout RRMS_AuxiliariesColumnLayout;
						string $selectForm = `formLayout -numberOfDivisions 100`;
						int $vOffset;
						int $hOffset;
						for ($each in $topNodes)
						{
							$nodeType = `getAttr ($each + ".topNode")`;
							if ($nodeType == "auxiliary")
							{
								print ("each is " + $each + "\n");
								//GET CORE NAME
								string $coreName = `getAttr ($each + ".coreName")`;
								string $moduleName = `getAttr ($each + ".moduleName")`;
								string $side = "";
								
								
								$frameWidth = 184;

								string $auxiliaryButton;
								vector $buttonC1 = <<0.20, 0.45, 0.22>>;
								vector $buttonC2 = <<0.33, 0.57, 0.35>>;
								vector $buttonC3 = <<0.40, 0.75, 0.43>>;
								if (`objExists ($each + ".side")`)
								{
									$side = `getAttr ($each + ".side")`;
									//print ("side is " + $side + "\n");
									if ($side == "right")
									{
										//print "sfdsf";
										$buttonC1 = <<0.65, 0.15, 0.15>>;
										$buttonC2 = <<0.75, 0.25, 0.25>>;
										$buttonC3 = <<1.00, 0.45, 0.45>>;
									}
									if ($side == "left")
									{
										//print "zxcxcx";
										$buttonC1 = <<0.00, 0.20, 0.65>>;
										$buttonC2 = <<0.12, 0.50, 0.85>>;
										$buttonC3 = <<0.23, 0.70, 1.00>>;
									}
								}

								//AUXILIARY CONTROLS
								string $selectForm = `formLayout -numberOfDivisions 100`;

								//CREATE PAIRING FRAME LAYOUT
								if (`objExists ($each + ".side")` && ($side == "right"))
								{
									$auxButton = `button -label ($coreName + "_AuxCtrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_AuxCtrl") ($coreName + "_AuxCtrl")`;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								else if (`objExists ($each + ".side")` && ($side == "left"))
								{
									$auxButton = `button -label ($coreName + "_AuxCtrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_AuxCtrl") ($coreName + "_AuxCtrl")` ;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								else
								{
									$auxButton = `button -label ($coreName + "_AuxCtrl") -w 150 -h 18 -bgc ($buttonC2.x) ($buttonC2.y) ($buttonC2.z) -ann ($modRigName + $coreName + "_AuxCtrl") ($coreName + "_AuxCtrl")`;
									button -edit -command ("modSelectControl " + $auxButton) $auxButton;
									formLayout -edit
									-attachForm $auxButton "left" 0
									-attachForm $auxButton "top" 0
									$selectForm;
								}
								

								
	
								setParent RRMS_AuxiliariesColumnLayout;

								$i++;
								if ($i == 2 || !`objExists ($each + ".side")`)
								{
									setParent RRMS_AuxiliariesColumnLayout;
								}
							}
							//setParent RRMS_AuxiliariesColumnLayout;
							//$i = ($i + 1);
						}

			//setParent mainModSelectionPaneLayout;
			setParent modPoserTabs;
					
		    
			tabLayout -edit -tabLabel $modForm ("Select \"" + $modRigName + "\"") modPoserTabs;
			
			select $mainCtrl[0];

		}
		else
		{
			warning "\nThe selected object is not the \"MAINC\" of a rig";
		}
	}
	else if ($selectionSize == 0)
	{
		warning "You must select the \"MAINC\" of a rig to generate the UI";
	}
	else
	{
		warning "You can only have one object selected to generate the UI";
	}
}


//MAIN PROCEDURE FOR WINDOW
global proc RapidRig_Modular_Selector()                                        
{
	if (`window -exists RRM_Selector`) 
	{
		deleteUI RRM_Selector; 
	}
	//GET NUMBER OF MODULES
	$mainCtrl = `ls -sl`;
	$selectionSize = `size $mainCtrl`;
	if ($selectionSize == 1)
	{
		if (`objExists ($mainCtrl[0] + ".isMain")`)
		{
			window -title "Rapid Rig: Modular Selector 1.5.2"
			//-wh 375 212
			-rtf on
			-mnb true
			-mxb true
			-s 1
			RRM_Selector;
		
			CreateModuPoserGUI();
			
			showWindow RRM_Selector;
			window -e -w 660 -h 800 RRM_Selector;
		}
		else
		{
			//warning "\nThe selected object is not the \"MAINC\" of a rig";
			confirmDialog -title "Select MAINCtrl" -message "You must select the \"MAINC\" of a rig to generate the UI"
			-button "OK" -defaultButton "OK"
			-cancelButton "OK" -dismissString "OK";
		}
	}
	else if ($selectionSize == 0)
	{
		confirmDialog -title "Nothing Selected" -message "You must select the \"MAINC\" of a rig to generate the UI"
		-button "OK" -defaultButton "OK"
		-cancelButton "OK" -dismissString "OK";
	}
	else
	{
		warning "You can only have one object selected to generate the UI";
	}
}

RapidRig_Modular_Selector;
