//
// uberCam.mel
//
// Clay Budin
// clay_budin@hotmail.com
// PandaPanther
// Apr 02 12
//

string $versionStr = "0.95b";

float $camData[];
int $sceneFrames[];
string $sceneNames[];

string $tsSceneList;

global proc uberCamGUI ()  {
	global string $versionStr;
	global string $tsSceneList;
	if (`window -ex uberCamGUIWindow` != true)  {
		string $window = `window -w 800 -title ("uberCam Generator v" + $versionStr) uberCamGUIWindow`;
		columnLayout;
		$tsSceneList = `textScrollList -w 800 -numberOfRows 8 -allowMultiSelection true -dkc "uberCamDeleteSelected" uberCamGUITScrlList`;
		rowLayout -nc 8;
		button -label "Add Scene(s)" -command "uberCamAddScene";
		text -label "   ";
		button -label "Create uberCam" -command ("window -e -visible 0 " + $window + "; uberCamRun");
		text -label "   ";
		button -label "Cancel" -command ("window -e -visible 0 " + $window);
		text -label "   ";
		button -label "Delete Selected" -command "uberCamDeleteSelected";
		button -label "Clear List" -command ("textScrollList -e -removeAll " + $tsSceneList);
		//text -label "	 ";
		//button -label "Move Up" -en 0;
		//button -label "Move Down" -en 0;
		showWindow $window;
	} else  {
		showWindow uberCamGUIWindow;
	}
}

global proc uberCamAddScene ()  {
	global string $tsSceneList;

	string $multipleFilters = "Maya Files (*.ma *.mb);;Maya ASCII (*.ma);;Maya Binary (*.mb);;All Files (*.*)";
	string $result[] = `fileDialog2 -fileFilter $multipleFilters -selectFileFilter "Maya Files" -dialogStyle 2 -fm 4 -cap "Choose scene files" -okc "Choose"`;
	if (size($result) > 0)  {
		string $sceneFile;
		for ($sceneFile in $result)  {
			textScrollList -e -append $sceneFile $tsSceneList;
		}
	}
}

global proc uberCamDeleteSelected ()  {
	global string $tsSceneList;
	
	int $delIdx[] = `textScrollList -q -sii $tsSceneList`;
	for ($i = size($delIdx)-1; $i >= 0; --$i)
		textScrollList -e -rii $delIdx[$i] $tsSceneList;
}

global proc uberCamGatherData ()  {
	global float $camData[];
	global int $sceneFrames[];
	global string $sceneNames[];

	global string $tsSceneList;
	string $sceneList[] = `textScrollList -q -allItems $tsSceneList`;
	string $scene;
	
	if (size($sceneList) == 0)  {
		warning("No scenes chosen to generate uberCam from\n");
		return;
	}
	
    print("uberCam: Begin.\n");

	clear($camData);
	clear($sceneFrames);
	clear($sceneNames);
	int $idx = 0;
	for ($scene in $sceneList)  {
		print("uberCam: Opening scene file " + $scene + "\n");
        string $shortScene = basename($scene, ".m.");
		$sceneNames[size($sceneNames)] = $shortScene;

		file -f -options "v=0" -prompt 0 -uc 0 -o $scene;
		float $startT = `playbackOptions -q -min`;
		float $endT = `playbackOptions -q -max`;
		
		$sceneFrames[size($sceneFrames)] = $startT;
		$sceneFrames[size($sceneFrames)] = $endT;
	   
		string $camera = "renderCam";
		if (! `objExists $camera`)  {
			$camera = "master:renderCam";
			if (! `objExists $camera`)  {
				warning("Scene: " + $shortScene + "  Could not find renderCam...Using persp instead\n");
				$camera = "persp";
			}
		}

		float $camAp[] = `getAttr ($camera + ".cameraAperture")`;
		if ($camAp[0] != .98 || $camAp[1] != .735)
			warning("Scene: " + $shortScene + "  Camera Film Gate not set to 35mm Full Aperture");
		
		//for ($t in {$startT, ($startT + $endT)*.5, $endT})  {
	   	for ($t = $startT; $t <= $endT; ++$t)  {
			currentTime $t;
			for ($at in {"tx", "ty", "tz", "rx", "ry", "rz", "fl"})
				$camData[$idx++] = `getAttr ($camera + "." + $at)`;
		}

	}
	
}

global proc uberCamCreate ()  {
	global float $camData[];
	global int $sceneFrames[];
	global string $sceneNames[];
	
	if (size($sceneNames) == 0)
		return;

	file -f -new;
	setAttr defaultResolution.pixelAspect 1.0;
	setAttr defaultResolution.width 1920;
	setAttr defaultResolution.height 1080;
	
	string $uberCam[] = `camera`;
	rename $uberCam[0] "uberCam";
	setAttr uberCam.cameraAperture .98 .735;
	
	int $uberFrame = 101;
	int $frame;
	int $cdIdx = 0, $sfIdx = 0;
	for ($scene in $sceneNames)  {
		string $sceneCam = ($scene + "_Cam");
		string $cam[] = `camera`;
		rename $cam[0] $sceneCam;
		setAttr ($sceneCam + ".cameraAperture") .98 .735;
		
		int $startT = $sceneFrames[$sfIdx++];
		int $endT = $sceneFrames[$sfIdx++];
		int $midT = ($startT + $endT) * .5;
		
		for ($frame = $startT; $frame <= $endT; ++$frame)  {
			if ($frame == $startT || $frame == $midT || $frame == $endT)  {
				currentTime $uberFrame;
				for ($at in {"tx", "ty", "tz", "rx", "ry", "rz", "fl"})  {
					setKeyframe -v $camData[$cdIdx++] -at $at "uberCam";
				}
				$cdIdx -= 7;
				++$uberFrame;
			}

			currentTime $frame;
			for ($at in {"tx", "ty", "tz", "rx", "ry", "rz", "fl"})  {
				setKeyframe -v $camData[$cdIdx++] -at $at $sceneCam;
			}
		}
	}
	clear($camData);
	clear($sceneFrames);
	clear($sceneNames);
		
	playbackOptions -min 101 -max ($uberFrame-1);
}

global proc uberCamRun ()  {
	uberCamGatherData();
	uberCamCreate();
	
	print("uberCam: Done.\n");
}

global proc uberCam ()  {
	uberCamGUI();
}


