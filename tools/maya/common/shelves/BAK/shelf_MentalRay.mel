global proc shelf_MentalRay () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 23
        -height 23
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Open Folders" 
        -enableBackground 0
        -align "center" 
        -label "folders" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "fileOpen.png" 
        -image1 "fileOpen.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "$empty = `confirmDialog -t \"Next Step\" -m \"Right click on icon for folder list\" -button \"Okay\" -defaultButton \"Okay\" -cancelButton \"No\"`;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
        -mi "Maya File" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nmayaFilePath = ''\nif isAsset:\n\tmayaFilePath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\assets\\\\' + assetType + '\\\\' + assetName + '\\\\geo\\\\work'\nelse:\n\tmayaFilePath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\scenes\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot + '\\\\LGT\\\\work'\n\nos.system(\"start explorer \\\"\" + mayaFilePath + \"\\\"\")" )
        -mip 0
        -mi "Nuke Comp" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nnukeFilePath = ''\nif isAsset:\n\tnukeFilePath = drive + '\\\\' + job + '\\\\COMP\\\\_ASSETS\\\\' + assetType + '\\\\' + assetName + '\\\\PRECOMP'\nelse:\n\tnukeFilePath = drive + '\\\\' + job + '\\\\COMP\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot + '\\\\PRECOMP'\n\nos.system(\"start explorer \\\"\" + nukeFilePath + \"\\\"\")" )
        -mip 1
        -mi "Tmp Images" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nrenderedImagesPath = ''\nif isAsset:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\images\\\\tmp'\nelse:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\images\\\\tmp'\n\nos.system(\"start explorer \\\"\" + renderedImagesPath + \"\\\"\")" )
        -mip 2
        -mi "Style frames" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nrenderedImagesPath = ''\nif isAsset:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\STYLEFRAMES\\\\_ASSETS\\\\' + assetType + '\\\\' + assetName\nelse:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\STYLEFRAMES\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot\n\nos.system(\"start explorer \\\"\" + renderedImagesPath + \"\\\"\")" )
        -mip 3
        -mi "Source Images (textures)" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nrenderedImagesPath = ''\nif isAsset:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\assets\\\\' + assetType + '\\\\' + assetName + '\\\\sourceimages'\nelse:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\sourceimages'\n\nos.system(\"start explorer \\\"\" + renderedImagesPath + \"\\\"\")" )
        -mip 4
        -mi "Slapcomp images" ( "import os\nimport re\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\nsceneName = re.sub('_v\\d\\d\\d','',sceneName)\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\ncompImagesPath = ''\nif isAsset:\n\tcompImagesPath = drive + '\\\\' + job + '\\\\RENDER\\\\_ASSETS\\\\' + assetType + '\\\\' + assetName + '\\\\PRECOMP\\\\' + sceneName\nelse:\n\tcompImagesPath = drive + '\\\\' + job + '\\\\RENDER\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot + '\\\\PRECOMP\\\\' + sceneName\n\nos.system(\"start explorer \\\"\" + compImagesPath + \"\\\"\")\n\n\n" )
        -mip 5
        -mi "Rendered images" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\nrenderedImagesPath = ''\nif isAsset:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\images\\\\_ASSETS\\\\' + assetType + '\\\\' + assetName + '\\\\' + sceneName\nelse:\n\trenderedImagesPath = drive + '\\\\' + job + '\\\\3D\\\\' + mayaProj + '\\\\images\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot + '\\\\LGT\\\\' + sceneName\n\nos.system(\"start explorer \\\"\" + renderedImagesPath + \"\\\"\")" )
        -mip 6
        -mi "Composited images" ( "import os\nimport rainbow.objects as R\nimport maya.cmds\n\nscenePath = maya.cmds.file(q=True,sn=True)\nscenePathList = scenePath.split('/')\n\nisAsset = 0\nif scenePathList[4] == 'assets':\n\tisAsset = 1\n\ndrive = scenePathList[0]\njob = scenePathList[1]\nmayaProj = scenePathList[3]\nfileName = scenePathList[-1]\nsceneNameA = fileName.strip('.ma')\nsceneName = sceneNameA.strip('.mb')\n\nseq = ''\nshot = ''\nassetType = ''\nassetName = ''\nif isAsset:\n\tassetType = scenePathList[5]\n\tassetName = scenePathList[6]\nelse:\n\tseq = scenePathList[6]\n\tshot = scenePathList[7]\n\ncompImagesPath = ''\nif isAsset:\n\tcompImagesPath = drive + '\\\\' + job + '\\\\RENDER\\\\_ASSETS\\\\' + assetType + '\\\\' + assetName + '\\\\PRECOMP\\\\' + sceneName\nelse:\n\tcompImagesPath = drive + '\\\\' + job + '\\\\RENDER\\\\_ALL_SHOTS\\\\' + seq + '\\\\' + shot + '\\\\PRECOMP\\\\' + sceneName\n\nos.system(\"start explorer \\\"\" + compImagesPath + \"\\\"\")\n\n\n\n" )
        -mip 7
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Enable hypershade swatches from updating" 
        -enableBackground 0
        -align "center" 
        -label "enableSwatchRefresh" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/enableSwatchRefresh.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/enableSwatchRefresh.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists enableSwatchRefresh`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/enableSwatchRefresh.mel\\\"\");if (`exists enableSwatchRefresh`) enableSwatchRefresh;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Disables hypershade swatches from updating" 
        -enableBackground 0
        -align "center" 
        -label "disableSwatchRefresh" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/disableSwatchRefresh.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/disableSwatchRefresh.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists disableSwatchRefresh`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/disableSwatchRefresh.mel\\\"\");if (`exists disableSwatchRefresh`) disableSwatchRefresh;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select all in namespace" 
        -enableBackground 0
        -align "center" 
        -label "selectAllInNamespace" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SAIN" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/selectAllInNamespace.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/selectAllInNamespace.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists selectAllInNamespace`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/selectAllInNamespace.mel\\\"\");if (`exists selectAllInNamespace`) selectAllInNamespace;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Set scene to 30FPS" 
        -enableBackground 0
        -align "center" 
        -label "setTo30FPS" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/setTo30FPS.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/setTo30FPS.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists setTo30FPS`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/setTo30FPS.mel\\\"\");if (`exists setTo30FPS`) setTo30FPS;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Insert Gamma Correct Node" 
        -enableBackground 0
        -align "center" 
        -label "insertGammaCorrectNode" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/insertGammaCorrectNode.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/insertGammaCorrectNode.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists addRec709GammaNode`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Effects/addRec709GammaNode\\\"\");if (`exists addRec709GammaNode`) addRec709GammaNode;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Slap Comp" 
        -enableBackground 0
        -align "center" 
        -label "slapComp" 
        -labelOffset 0
        -font "plainLabelFont" 
        -imageOverlayLabel "SLAP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import slapComp\nreload(slapComp)\nslapComp.slapComp()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mental Ray low resolution settings" 
        -enableBackground 0
        -align "center" 
        -label "mentalRay_LOW" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/mentalRay_LOW.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/mentalRay_LOW.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists mentalRay_LOW`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/mentalRay_LOW.mel\\\"\");if (`exists mentalRay_LOW`) mentalRay_LOW;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Mental Ray high resolution settings" 
        -enableBackground 0
        -align "center" 
        -label "mentalRay_HI" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/mentalRay_HI.png" 
        -image1 "//moon/pipeline/dev/maya/common/scripts/Toolbox/Lighting/mentalRay_HI.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "if (`exists mentalRay_HI`==0) eval (\"source \\\"\"+`getenv MAYA_PPTOOLS`+\"/scripts/Toolbox/Lighting/mentalRay_HI.mel\\\"\");if (`exists mentalRay_HI`) mentalRay_HI;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
